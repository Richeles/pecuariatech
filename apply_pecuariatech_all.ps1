# =====================================================================
# SCRIPT: apply_pecuariatech_all.ps1
# AUTOR: Richeles + GPT-5
# OBJETIVO: Pipeline automatizado PecuariaTech Cloud
# =====================================================================

function Log {
    param([string]$msg, [string]$type = "INFO")
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Host "[$timestamp] [$type] $msg"
}

# === 1Ô∏è‚É£ In√≠cio ===
Log "Iniciando pipeline PecuariaTech Cloud..." "INFO"
Set-Location "C:\Users\Administrador\pecuariatech"

# === 2Ô∏è‚É£ Verifica√ß√£o do ambiente ===
if (-not (Get-Command "supabase" -ErrorAction SilentlyContinue)) {
    Log "‚ùå Supabase CLI n√£o encontrada. Instale e tente novamente." "ERRO"
    exit 1
}
if (-not (Get-Command "vercel" -ErrorAction SilentlyContinue)) {
    Log "‚ùå Vercel CLI n√£o encontrada. Instale e tente novamente." "ERRO"
    exit 1
}
Log "‚úÖ Ambiente verificado com sucesso (Supabase + Vercel dispon√≠veis)." "OK"

# === 3Ô∏è‚É£ Garantir pasta components ===
$componentsPath = "C:\Users\Administrador\pecuariatech\components"
if (-not (Test-Path $componentsPath)) {
    Log "‚öôÔ∏è Criando pasta 'components'..." "WARN"
    New-Item -Path $componentsPath -ItemType Directory -Force | Out-Null
    Start-Sleep -Seconds 1
}
if (-not (Test-Path $componentsPath)) {
    Log "‚ùå Falha ao criar pasta components. Verifique permiss√µes." "ERRO"
    exit 1
}
Log "üìÅ Pasta 'components' pronta." "OK"

# === 4Ô∏è‚É£ Criar componentes UltraChat e UltraBiologico2 ===
$chatFile = Join-Path $componentsPath "UltraChat.tsx"
$bioFile = Join-Path $componentsPath "UltraBiologico2.tsx"

try {
    if (-not (Test-Path $chatFile)) {
        Log "üß† Criando UltraChat.tsx..." "INFO"
        @"
export default function UltraChat() {
  return (
    <div style={{ padding: '20px', border: '2px solid #4ade80', borderRadius: '10px', background: '#ecfdf5' }}>
      <h2>ü§ñ UltraChat Placeholder</h2>
      <p>Componente ainda em desenvolvimento...</p>
    </div>
  );
}
"@ | Out-File -FilePath $chatFile -Encoding utf8 -Force
    }

    if (-not (Test-Path $bioFile)) {
        Log "üåø Criando UltraBiologico2.tsx..." "INFO"
        @"
export default function UltraBiologico2() {
  return (
    <div style={{ padding: '20px', border: '2px solid #60a5fa', borderRadius: '10px', background: '#eff6ff' }}>
      <h2>üß¨ UltraBiol√≥gico 2 Placeholder</h2>
      <p>Componente ainda em desenvolvimento...</p>
    </div>
  );
}
"@ | Out-File -FilePath $bioFile -Encoding utf8 -Force
    }
}
catch {
    Log "‚ùå Erro ao criar componentes: $($_.Exception.Message)" "ERRO"
    exit 1
}
Log "‚úÖ Componentes criados/verificados com sucesso." "OK"

# === 5Ô∏è‚É£ Build local Next.js ===
Log "üöÄ Iniciando build local..." "INFO"
npm run build | Tee-Object -FilePath "build_log.txt"
if ($LASTEXITCODE -ne 0) {
    Log "‚ùå Erro no build local. Veja build_log.txt para detalhes." "ERRO"
    exit 1
}
Log "‚úÖ Build local conclu√≠do." "OK"

# === 6Ô∏è‚É£ Deploy no Vercel ===
Log "‚òÅÔ∏è Iniciando deploy no Vercel..." "INFO"
vercel --prod | Tee-Object -FilePath "vercel_deploy_log.txt"
if ($LASTEXITCODE -ne 0) {
    Log "‚ùå Erro no deploy. Veja vercel_deploy_log.txt." "ERRO"
    exit 1
}
Log "‚úÖ Deploy finalizado com sucesso!" "OK"
Log "üéØ Pipeline PecuariaTech Cloud conclu√≠do com √™xito ‚úÖ" "OK"
